// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read all accounts for a user",
                "tags": [
                    "accounts"
                ],
                "summary": "Read all accounts for a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read all accounts for a user",
                "tags": [
                    "accounts"
                ],
                "summary": "Read all accounts for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Delete an account",
                "tags": [
                    "accounts"
                ],
                "summary": "Delete an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Update an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Update an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/accounts/{id}/activate": {
            "post": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "description": "Set an account to \"active\"",
                "tags": [
                    "accounts"
                ],
                "summary": "Activate an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/accounts/{id}/invite": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Send an email invitation to join an account",
                "tags": [
                    "accounts"
                ],
                "summary": "Email an account invitation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/accounts/{id}/limits": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Get the limits for an account",
                "tags": [
                    "accounts"
                ],
                "summary": "Get the limits for an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Limits"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/accounts/{id}/users": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read all users for an account",
                "tags": [
                    "accounts"
                ],
                "summary": "Read all users for an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/device": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read all devices",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Read all devices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Create a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Create a device",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    }
                }
            }
        },
        "/device/{id}": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read a device",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Read a device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Delete a device",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Delete a device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Update a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Update a device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Device"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    }
                }
            }
        },
        "/device/{id}/status": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read state for a device",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Read state for a device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    }
                }
            }
        },
        "/net": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read all networks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "net"
                ],
                "summary": "Read all networks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.Network"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Create a new network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "net"
                ],
                "summary": "Create a new network",
                "parameters": [
                    {
                        "description": "Network",
                        "name": "net",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/net/{id}": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read a network",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "net"
                ],
                "summary": "Read a network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Delete a network",
                "tags": [
                    "net"
                ],
                "summary": "Delete a network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Update a network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "net"
                ],
                "summary": "Update a network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Network",
                        "name": "net",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/vpn": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read all VPNs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vpn"
                ],
                "summary": "Read all VPNs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.VPN"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Create a new VPN for a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vpn"
                ],
                "summary": "Create a new VPN for a device",
                "parameters": [
                    {
                        "description": "VPN",
                        "name": "vpn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VPN"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VPN"
                        }
                    }
                }
            }
        },
        "/vpn/{id}": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Read a VPN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vpn"
                ],
                "summary": "Read a VPN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VPN ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VPN"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Delete a VPN",
                "tags": [
                    "vpn"
                ],
                "summary": "Delete a VPN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VPN ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Update a VPN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vpn"
                ],
                "summary": "Update a VPN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VPN ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "VPN",
                        "name": "vpn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VPN"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VPN"
                        }
                    }
                }
            }
        },
        "/vpn/{id}/config": {
            "get": {
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "description": "Get VPN config",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "vpn"
                ],
                "summary": "Get VPN config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VPN ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Device"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "netId": {
                    "type": "string"
                },
                "netName": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Network"
                    }
                },
                "parent": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "vpns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VPN"
                    }
                }
            }
        },
        "model.Device": {
            "type": "object",
            "properties": {
                "accountid": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "apiid": {
                    "type": "string"
                },
                "appdata": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "authdomain": {
                    "type": "string"
                },
                "checkInterval": {
                    "type": "integer"
                },
                "clientid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "debug": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "ezcode": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instanceid": {
                    "type": "string"
                },
                "lastSeen": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "quiet": {
                    "type": "boolean"
                },
                "registered": {
                    "type": "boolean"
                },
                "server": {
                    "type": "string"
                },
                "serviceApiKey": {
                    "type": "string"
                },
                "serviceGroup": {
                    "type": "string"
                },
                "sourceAddress": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updateKeys": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vpns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VPN"
                    }
                }
            }
        },
        "model.Limits": {
            "type": "object",
            "properties": {
                "accountid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "devices": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "maxdevices": {
                    "type": "integer"
                },
                "maxmembers": {
                    "type": "integer"
                },
                "maxnetworks": {
                    "type": "integer"
                },
                "maxservices": {
                    "type": "integer"
                },
                "members": {
                    "type": "integer"
                },
                "networks": {
                    "type": "integer"
                },
                "services": {
                    "type": "integer"
                },
                "tolerance": {
                    "type": "number"
                },
                "updated": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VPNConfig"
                    }
                },
                "device": {
                    "$ref": "#/definitions/model.Device"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.Network": {
            "type": "object",
            "properties": {
                "accountid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "critical": {
                    "type": "boolean"
                },
                "default": {
                    "$ref": "#/definitions/model.Settings"
                },
                "description": {
                    "type": "string"
                },
                "forceUpdate": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "netName": {
                    "type": "string"
                },
                "policies": {
                    "$ref": "#/definitions/model.Policies"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            }
        },
        "model.Policies": {
            "type": "object",
            "properties": {
                "onlyEndpoints": {
                    "type": "boolean"
                },
                "userEndpoints": {
                    "type": "boolean"
                }
            }
        },
        "model.Settings": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedIPs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableDns": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "failsafe": {
                    "type": "boolean"
                },
                "hasRDP": {
                    "type": "boolean"
                },
                "hasSSH": {
                    "type": "boolean"
                },
                "listenPort": {
                    "type": "integer"
                },
                "mtu": {
                    "type": "integer"
                },
                "persistentKeepalive": {
                    "type": "integer"
                },
                "postDown": {
                    "type": "string"
                },
                "postUp": {
                    "type": "string"
                },
                "preDown": {
                    "type": "string"
                },
                "preUp": {
                    "type": "string"
                },
                "presharedKey": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "subnetRouting": {
                    "type": "boolean"
                },
                "syncEndpoint": {
                    "type": "boolean"
                },
                "table": {
                    "type": "string"
                },
                "upnp": {
                    "type": "boolean"
                }
            }
        },
        "model.VPN": {
            "type": "object",
            "properties": {
                "accountid": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "current": {
                    "$ref": "#/definitions/model.Settings"
                },
                "default": {
                    "$ref": "#/definitions/model.Settings"
                },
                "deviceid": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Device"
                    }
                },
                "enable": {
                    "type": "boolean"
                },
                "failCount": {
                    "type": "integer"
                },
                "failover": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "netName": {
                    "type": "string"
                },
                "netid": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            }
        },
        "model.VPNConfig": {
            "type": "object",
            "properties": {
                "netName": {
                    "type": "string"
                },
                "netid": {
                    "type": "string"
                },
                "vpns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VPN"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "name": "X-API-KEY",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "my.nettica.com",
	BasePath:         "/api/v1.0",
	Schemes:          []string{"https"},
	Title:            "Nettica API",
	Description:      "Nettica API documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
